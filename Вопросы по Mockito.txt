По замечаниям по заданию..
1) Я убрал логику из тестов, упростил код, насколько это было в рамках моей скудной компетенциии.
2)К моему стыду, я закопался с задачей про упаковке в один пакет тестируемого класса и теста.
Почему я не могу импортировать в тест тестируемые классы тз пакета ru.netology ?
Надо папку с тестами внутрь что ли ru.netology засунуть?


1) в теге build ошибка plugin not found. File->Settings->Maven-> поставил галочку на пункте Use plagin registry, почистил кэш идеи, проблема не решена.

2) тест MessageSenderShouldSendRussianMessageToRussianIp()
При передаче параметром  IP, не являющимся российским и американским ( начинается с 172 или 96), метод byIp класса GeoserviceImpl возвращает null, что в дальнейшем провоцирует выброс NPE в методе send класса MessageSendImpl.
Вопрос в том, надо ли реализовывать проверку выброса исключения в одном тесте вбросив невалидный IP в качестве параметра теста  (например,98.000.00.00) вместе с валидными параметрами(Российским и Американским IP).
Я сделал отдельно.

3) В аннотации @BeforeEach я пытаюсь  один раз инициализировать заглушки(ниже), применить их потом по имени.
Почему их не видно в @Test ??? Приходится инициализировать непосредственно в тестах. Подскажите, в чем я ошибаюсь.
GeoServiceImpl geoService = Mockito.spy(new GeoServiceImpl());
LocalizationServiceImpl localizationService = Mockito.spy(new LocalizationServiceImpl());

4) только при перестановке правил в определенном порядке (ниже в тексте) я получил результат "Добро пожаловать", из за Mockito.any() всегда был только Welcome.
Получается, надо задавать суживающиеся условия сверху вниз? Так это работает? Условные операторы вы мне запретили использовать, я их убрал.
Mockito.doReturn(new Location("NewYork", Country.USA, "KennedyStreet", 1)).when(geoService).byIp(Mockito.any());
Mockito.doReturn(new Location("Moscow", Country.RUSSIA, "Lenina", 15)).when(geoService).byIp(Mockito.startsWith("172"));

5)Почему при попытке коротко инициализировать заглушку в аннотации @Mock вылетает org.mockito.exceptions.misusing.NullInsteadOfMockException?
"- потому что чтобы использовать аннотации, нужно подключить и раннер. Например, @RunWith(MockitoJUnitRunner.class)". Для чего, если работает все через подключенную зависимость Junit5?
Юрий, не могли бы Вы в 2 словах объяснить, для чего нужен этот Runner?

